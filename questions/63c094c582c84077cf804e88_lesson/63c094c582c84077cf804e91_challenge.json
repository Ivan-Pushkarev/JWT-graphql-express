{
  "_id": "63c094c582c84077cf804e91",
  "name": {
    "ru": "Отформатировать контакт в записной книжке",
    "en": "",
    "es": ""
  },
  "instruction": {
    "ru": "Длина строки записной книжки равна 50 символам.\n\nНапишите функцию `formatContact`, которая принимает параметра: `name`,  и `phone`.\n\nФункция должна вернуть строку, которая будет содержать в себе имя и телефон, разделенные точками.\n\nПример запуска функции:\n```javascript\nformatContact('  John   ', '  12345678901 '); // 'JOHN............................+1 (234) 567 89-01'\n```\nВ имени и телефоне удаляйте пробелы в начале и в конце строки.\n\nДля форматирования телефона обращайтесь к каждому символу телефона по индексу. Используйте конкатенацию строк.\n\nВозвращаемая строка должна быть длиной 50 символов.\n\nМежду именем и телефоном должны быть точки.\n\nСколько точек нужно поставить, чтобы длина строки была 50 символов, определяйте на основе длины имени и телефона.",
    "en": "",
    "es": ""
  },
  "initialSolution": "fun",
  "completedSolution": "function formatContact(name, phone) {\n  const n = name.trim().toUpperCase();\n  const p = phone.trim();\n  const formattedPhone = `+${p[0]} (${p[1]}${p[2]}${p[3]}) ${p[4]}${p[5]}${p[6]} ${p[7]}${p[8]}-${p[9]}${p[10]}`;\n  const dotCount = 50 - n.length - formattedPhone.length;\n  return n + '.'.repeat(dotCount) + formattedPhone;\n}",
  "openTest": "it('Created function formatContact', () => {\n  expect(formatContact).to.be.a('function');\n});\n\nit('formatContact(\"  John   \", \"  12345678901 \") should return \"JOHN............................+1 (234) 567 89-01\"', () => {\n  expect(formatContact('  John   ', '  12345678901 ')).to.be.equal(\n    'JOHN............................+1 (234) 567 89-01',\n  );\n});\n\nit('formatContact(\"  Samuel   \", \"  49876541232 \") should return \"SAMUEL..........................+4 (987) 654 12-32\"', () => {\n  expect(formatContact('  Samuel   ', '  49876541232 ')).to.be.equal(\n    'SAMUEL..........................+4 (987) 654 12-32',\n  );\n});\n\nit('formatContact(\"  Jane   \", \"  32345678901 \") should return \"JANE............................+3 (234) 567 89-01\"', () => {\n  expect(formatContact('  Jane   ', '  32345678901 ')).to.be.equal(\n    'JANE............................+3 (234) 567 89-01',\n  );\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit"
}