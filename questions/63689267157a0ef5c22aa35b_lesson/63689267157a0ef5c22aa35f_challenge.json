{
  "_id": "63689267157a0ef5c22aa35f",
  "name": {
    "ru": "Делится на 3 и на 5",
    "en": "",
    "es": ""
  },
  "instruction": {
    "ru": "Напишите функцию `isDivisibleByThreeAndFive`, которая принимает число и возвращает `true`, если число делится на `3` и на `5`. В противном случае возвращает `false`.\n\nЭту задачу можно решить с помощью `if`, но для тренировки попробуйте решить ее с помощью `&&`.\n\nПохожий пример:\n```javascript\nfunction isDivisibleByTwoAndThree(number) {\n  if (number % 2 === 0 && number % 3 === 0) {\n    return true;\n  }\n  return false;\n}\n```",
    "en": "",
    "es": ""
  },
  "initialSolution": "fun",
  "completedSolution": "function isDivisibleByThreeAndFive(number) {\n  if (number % 3 === 0 && number % 5 === 0) {\n    return true;\n  }\n  return false;\n}",
  "openTest": "it('Created function isDivisibleByThreeAndFive', () => {\n  expect(isDivisibleByThreeAndFive).to.be.a('function');\n});\n\nit('isDivisibleByThreeAndFive(15) should return true', () => {\n  expect(isDivisibleByThreeAndFive(15)).to.be.equal(true);\n});\n\nit('isDivisibleByThreeAndFive(12) should return false', () => {\n  expect(isDivisibleByThreeAndFive(12)).to.be.equal(false);\n});\n\nit('isDivisibleByThreeAndFive(10) should return false', () => {\n  expect(isDivisibleByThreeAndFive(10)).to.be.equal(false);\n});\n\nit('isDivisibleByThreeAndFive(9) should return false', () => {\n  expect(isDivisibleByThreeAndFive(9)).to.be.equal(false);\n});\n\nit('isDivisibleByThreeAndFive(6) should return false', () => {\n  expect(isDivisibleByThreeAndFive(6)).to.be.equal(false);\n});\n\nit('isDivisibleByThreeAndFive(5) should return false', () => {\n  expect(isDivisibleByThreeAndFive(5)).to.be.equal(false);\n});\n\nit('isDivisibleByThreeAndFive(3) should return false', () => {\n  expect(isDivisibleByThreeAndFive(3)).to.be.equal(false);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit"
}