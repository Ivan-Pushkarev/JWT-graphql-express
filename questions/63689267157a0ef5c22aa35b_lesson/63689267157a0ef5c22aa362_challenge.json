{
  "_id": "63689267157a0ef5c22aa362",
  "name": {
    "ru": "Определить что 4 точки образуют квадрат",
    "en": "",
    "es": ""
  },
  "instruction": {
    "ru": "В этой задаче мы будем использовать оси координат.\n\nОсь `x` направлена вправо, ось `y` – вверх.\n\nТочка `(0, 0)` – это начало координат.\n\nИменно в этой задаче мы не использовать отрицательные координаты.\n\nВсе точки находятся в первой четверти координатной плоскости.\n\nНапишите функцию `isSquare`, которая принимает четыре точки и возвращает `true`, если эти точки образуют квадрат.\n\nКаждая точка задается двумя координатами: `x` и `y`.\n\nКвадрат – это четырехугольник, у которого все стороны равны.\n\nФункция `isSquare` принимает параметры в следующем порядке:\n- `x1`, `y1` – координаты первой точки. Нижняя левая точка квадрата.\n- `x2`, `y2` – координаты второй точки. Верхняя левая точка квадрата.\n- `x3`, `y3` – координаты третьей точки. Верхняя правая точка квадрата.\n- `x4`, `y4` – координаты четвертой точки. Нижняя правая точка квадрата.\n\nВсего 4 точки и 8 параметров. Последовательность определения точек важна.\n\nНижняя грань квадрата параллельна оси `x`, левая грань параллельна оси `y`.\n\nПримеры запуска функции:\n```javascript\nisSquare(2, 1, 2, 5, 6, 5, 6, 1); // true\nisSquare(2, 1, 2, 5, 8, 5, 8, 1) // false\n```\n\nДля лучшего понимания, нарисуйте на бумаге эти фигуры. Найдите закономерности в координатах точек.\n\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/square-diagram.gif)\n\nНаверняка вы заметите, что у точек квадрата есть общие свойства между парами.\n\nНапример, `x1` и `x2` всегда равны, а `y1` и `y4` всегда равны. Найдите остальные закономерности.\n\nУчитывайте, что просто сравнить все параметры между собой не получится, так как в некоторых случаях это будет пропускать прямоугольник.\n\nОбязательно делайте проверку на длину сторон квадрата – горизонтальные и вертикальные стороны должны быть равны.\n\nИспользуйте `if` и операторы сравнения для решения задачи.",
    "en": "",
    "es": ""
  },
  "initialSolution": "fun",
  "completedSolution": "function isSquare(x1, y1, x2, y2, x3, y3, x4, y4) {\n  if (x1 === x2 && y1 === y4 && x3 === x4 && y2 === y3 && y2 - y1 === x3 - x2) {\n    return true;\n  }\n  return false;\n}",
  "openTest": "it('Created function isSquare', () => {\n  expect(isSquare).to.be.a('function');\n});\n\nit('isSquare(2,1,2,5,6,5,6,1) === true', () => {\n  expect(isSquare(2, 1, 2, 5, 6, 5, 6, 1)).to.be.equal(true);\n});\n\nit('isSquare(2,1,2,5,8,5,8,1) === false', () => {\n  expect(isSquare(2, 1, 2, 5, 8, 5, 8, 1)).to.be.equal(false);\n});\n\nit('isSquare(0, 0, 0, 1, 1, 1, 1, 0) === true', () => {\n  expect(isSquare(0, 0, 0, 1, 1, 1, 1, 0)).to.be.equal(true);\n});\n\n\nit('isSquare(2, 2, 2, 3, 3, 3, 3, 2) === true', () => {\n  expect(isSquare(2, 2, 2, 3, 3, 3, 3, 2)).to.be.equal(true);\n});\n\nit('isSquare(4, 4, 4, 5, 5, 5, 5, 4) === true', () => {\n  expect(isSquare(4, 4, 4, 5, 5, 5, 5, 4)).to.be.equal(true);\n});\n\nit('isSquare(0, 0, 0, 1, 1, 1, 1, 1) === false', () => {\n  expect(isSquare(0, 0, 0, 1, 1, 1, 1, 1)).to.be.equal(false);\n});\n\nit('isSquare(0, 0, 0, 1, 1, 1, 0, 1) === false', () => {\n  expect(isSquare(0, 0, 0, 1, 1, 1, 0, 1)).to.be.equal(false);\n});\n\nit('isSquare(0, 0, 1, 0, 1, 1, 0, 0) === false', () => {\n  expect(isSquare(0, 0, 1, 0, 1, 1, 0, 0)).to.be.equal(false);\n});\n\nit('isSquare(0, 0, 1, 0, 1, 1, 0, 2) === false', () => {\n  expect(isSquare(0, 0, 1, 0, 1, 1, 0, 2)).to.be.equal(false);\n});\n\nit('isSquare(0, 0, 1, 0, 1, 1, 0, 3) === false', () => {\n  expect(isSquare(0, 0, 1, 0, 1, 1, 0, 3)).to.be.equal(false);\n});\n\nit('isSquare(0, 0, 1, 0, 1, 1, 0, 4) === false', () => {\n  expect(isSquare(0, 0, 1, 0, 1, 1, 0, 4)).to.be.equal(false);\n});\n\nit('isSquare(0, 0, 1, 0, 1, 1, 0, 5) === false', () => {\n  expect(isSquare(0, 0, 1, 0, 1, 1, 0, 5)).to.be.equal(false);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit"
}