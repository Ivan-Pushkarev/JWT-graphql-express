{
  "_id": "63689267157a0ef5c22aa35e",
  "name": {
    "ru": "Нечетные и кратные 3",
    "en": "",
    "es": ""
  },
  "instruction": {
    "ru": "Напишите функцию `isOddAndMultipleOfThree`, которая принимает число и возвращает true, если число нечетное и кратно 3. В противном случае возвращает false.\n\nЭту задачу можно решить с помощью `if`, но для тренировки попробуйте решить ее с помощью `&&`.\n\nПохожий пример:\n```javascript\nfunction isEvenAndMultipleOfFour(number) {\n  if (number % 2 === 0 && number % 4 === 0) {\n    return true;\n  }\n  return false;\n}\n```\n\nВ этом примере на вход подается число, которое проверяется на четность и кратность 4. Если число четное и кратно 4, то функция возвращает true, иначе false.\n\nКратность можно проверить с помощью оператора `%`. Он возвращает остаток от деления. Например, `5 % 2` равно 1, потому что 5 делится на 2 с остатком 1. А `4 % 2` равно 0, потому что 4 делится на 2 без остатка.\n\nКратно трем – это значит, что остаток от деления на 3 равен 0. Например, `9 % 3` равно 0, потому что 9 делится на 3 без остатка.\n\n\nЛогическое И (`&&`) возвращает true, если оба операнда равны true. В противном случае возвращает false. Например, ` 2 > 1 && 3 > 2` равно true, потому что оба операнда равны true. А `2 > 1 && 3 < 2` равно false, потому что один из операндов равен false.",
    "en": "",
    "es": ""
  },
  "initialSolution": "fun",
  "completedSolution": "function isOddAndMultipleOfThree(number) {\n  return number % 2 !== 0 && number % 3 === 0;\n}",
  "openTest": "it('Created function isOddAndMultipleOfThree', () => {\n  expect(isOddAndMultipleOfThree).to.be.a('function');\n});\n\nit('isOddAndMultipleOfThree(3) === true', () => {\n  expect(isOddAndMultipleOfThree(3)).to.be.true;\n});\n\nit('isOddAndMultipleOfThree(6) === false', () => {\n  expect(isOddAndMultipleOfThree(6)).to.be.false;\n});\n\nit('isOddAndMultipleOfThree(9) === true', () => {\n  expect(isOddAndMultipleOfThree(9)).to.be.true;\n});\n\nit('isOddAndMultipleOfThree(12) === false', () => {\n  expect(isOddAndMultipleOfThree(12)).to.be.false;\n});\n\nit('isOddAndMultipleOfThree(15) === true', () => {\n  expect(isOddAndMultipleOfThree(15)).to.be.true;\n});\n\nit('isOddAndMultipleOfThree(18) === false', () => {\n  expect(isOddAndMultipleOfThree(18)).to.be.false;\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit"
}