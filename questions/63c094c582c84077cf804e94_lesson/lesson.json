{
  "_id": "63c094c582c84077cf804e94",
  "content": {
    "ru": "Методы `indexOf()` и `lastIndexOf()` определяют, содержит ли строка подстроку.\n\nСинтаксис метода `indexOf()`:\n\n```javascript\nlet index = str.indexOf(substr, fromIndex);\n```\n\nВ первом аргументе им передается искомое значение `substr`.\n\nВторой аргумент `fromIndex` является необязательным – он определяет индекс строки, с которого следует начинать поиск.\n\nПринцип работы `indexOf()`:\n\n* Ищет подстроку `substr` в строке `str`, начиная с указанного индекса `fromIndex` (включительно), и выполняет поиск слева направо.\n\n* Возвращает индекс первого вхождения подстроки `substr` в строке `str`.\n\n* Возвращает `-1`, если значение не найдено.\n\n```javascript\nconst message = \"Welcome\";\n\nconsole.log(message.indexOf(\"l\")); // 2, индекс подстроки \"l\" в строке \"Welcome\"\nconsole.log(message.indexOf(\"co\")); // 3\nconsole.log(message.indexOf(\"W\")); // 0\nconsole.log(message.indexOf(\"w\")); // -1, подстрока \"w\" не найдена в строке \"Welcome\"\n\nconsole.log(message.indexOf(\"e\", 2)); // 6, начиная с индекса 2 в строке ищем подстроку \"e\"\nconsole.log(message.indexOf(\"e\", 1)); // 1, начиная с индекса 1 в строке ищем подстроку \"e\"\n```\n\nМетод `indexOf()` выполняет поиск от начала строки к концу, а метод `lastIndexOf()` – от конца к началу.\n\nСинтаксис метода `lastIndexOf()`:\n\n```javascript\nlet index = str.lastIndexOf(substr, fromIndex);\n```\n\nПринцип работы `lastIndexOf()`:\n\n* Ищет подстроку `substr` в строке `str`, начиная с указанного индекса `fromIndex` (включительно), и выполняет поиск справа налево.\n\n* Возвращает индекс последнего вхождения подстроки `substr` в строке `str`.\n\n* Возвращает -1, если значение не найдено.\n\n```javascript\nconst message = \"Welcome\";\n\nconsole.log(message.lastIndexOf(\"e\")); // 6, последнее вхождение подстроки \"e\" в строке \"Welcome\"\nconsole.log(message.lastIndexOf(\"l\")); // 2\nconsole.log(message.lastIndexOf(\"e\", 2)); // 1, начиная с индекса 2 в строке \"Welcome\" ищем подстроку \"e\" справа налево\n\n```\n\nРассмотрим пару примеров в комбинации с другими методами строки:\n\n```javascript\nconst message = \"Welcome \";\n\nconsole.log(message.trim()); // \"Welcome\", метод trim() удалил пробелы\nconsole.log(message.trim().length); // 7, length возвращает длину строки\nconsole.log(message.trim().toUpperCase()); // \"WELCOME\", toUpperCase() переводит строку в верхний регистр\nconsole.log(message.trim().toUpperCase().indexOf(\"E\")); // 1\nconsole.log(message.trim().toUpperCase().repeat(3)); // \"WELCOMEWELCOMEWELCOME\"\nconsole.log(message.trim().toUpperCase().repeat(3).toLowerCase()); // \"welcomewelcomewelcome\"\n```\n\nЦепочка методов — это механизм вызова метода для другого метода той же строки. Это обеспечивает более чистый и читаемый код.\n\n```javascript\nconst message = \"Welcome \";\n\nconst result = message\n               .trim()\n               .toUpperCase()\n               .repeat(2)\n               .toLowerCase()\n               .indexOf('e', 2)\n\nconsole.log(result); // 1\n```\n\nНапишем функцию `searchIndex` которая принимает 2 параметра `str` и `subStr`.\n\nФункция должна возвращать индекс подстроки `subStr` в `str` не зависимо от регистра.\n\n```javascript\nfunction searchIndex(str, subStr) {\n  // приводим str к нижнему регистру\n  // subStr также приводим к нижнему регистру\n  // ищем индекс подстроки subStr в строке str\n  return str.toLowerCase().indexOf(subStr.toLowerCase()); \n}\n\nconsole.log(searchIndex('HeLlo','ll')) // 2\nconsole.log(searchIndex('HeLlo','Ll')) // 2\nconsole.log(searchIndex('HeLlo','LL')) // 2\nconsole.log(searchIndex('HeLlo','Ll')) // 2\n```\n",
    "en": "# Поиска индекса. Методы indexOf, lastIndexOf language: en",
    "es": "# Поиска индекса. Методы indexOf, lastIndexOf language: es"
  },
  "video": {
    "ru": "https://youtu.be/rB-Q12hwV54",
    "en": "",
    "es": ""
  }
}