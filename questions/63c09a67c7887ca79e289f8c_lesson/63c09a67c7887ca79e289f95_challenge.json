{
  "_id": "63c09a67c7887ca79e289f95",
  "name": {
    "ru": "Посчитай сколько страниц в книге",
    "en": "",
    "es": ""
  },
  "instruction": {
    "ru": "Напишите функцию `authorBook`, которая принимает два параметра-объекта:\n\n* `author` - объект, в котором хранится информация об авторе книги,\n* `book` - объект, в котором хранится информация о книге.\n\nВ объекте `author` есть три свойства:\n* `name` - имя автора, строка,\n* `bookTitle` - название книги, строка,\n* `bookPages` - число 0.\n\nВ объекте `book` есть три свойства:\n* `chapter1` - число страниц в первой главе,\n* `chapter2` - число страниц во второй главе,\n* `chapter3` - число страниц в третьей главе.\n\nФункция должна посчитать число страниц в книге и вывести объект `author`,\nв котором `bookPages` - число страниц в книге, равное сумме страниц во всех главах.\n\nПример запуска функции:\n```javascript\nauthorBook(\n  { name: 'J.R.R. Tolkien', bookTitle: 'The Lord', bookPages: 0 },\n  { chapter1: 289, chapter2: 345, chapter3: 189 }\n)\n// { name: 'J.R.R. Tolkien',\n//   bookTitle: 'The Lord',\n//   bookPages: 823 }\n```\nПохожий пример:\n```javascript\nharryPotterBook(\n  { name: 'J.K. Rowling', bookTitle: 'Harry Potter and Stone', bookPages: 0 },\n  { chapter1: 200, chapter2: 350, chapter3: 450 }\n)\n// { name: 'J.K. Rowling',\n//   bookTitle: 'Harry Potter and Stone',\n//   bookPages: 1000 }\n```",
    "en": "",
    "es": ""
  },
  "initialSolution": "fun",
  "completedSolution": "function authorBook(author, book) {\n  author.bookPages =\n    book.chapter1 + book.chapter2 + book.chapter3;\n  return author;\n}",
  "openTest": "it('Created function authorBook', () => {\n  expect(authorBook).to.be.a('function');\n});\n\nit('authorBook should return object', () => {\n  expect(authorBook(\n    {name: 'J.R.R. Tolkien', bookTitle: 'The Lord', bookPages: 0},\n    {chapter1: 289, chapter2: 345, chapter3: 189}\n  )).to.be.an('object');\n\n});\n\nit('authorBook should return object', () => {\n  expect(authorBook(\n    {name: 'J.K. Rowling', bookTitle: 'Harry Potter and Stone', bookPages: 0},\n    {chapter1: 200, chapter2: 350, chapter3: 450}\n  )).to.be.an('object');\n});\n\nit('authorBook should return object with bookPages', () => {\n  expect(authorBook(\n    {name: 'S.Y. Marshak', bookTitle: 'The Cat', bookPages: 0},\n    {chapter1: 2, chapter2: 3, chapter3: 18}\n  )).to.have.property('bookPages');\n\n});\n\nit('authorBook should return object with bookPages', () => {\n  expect(authorBook(\n    {name: 'N.V. Gogol', bookTitle: \"Dikan'ka's nights\", bookPages: 0},\n    {chapter1: 80, chapter2: 35, chapter3: 65}\n  )).to.eql({name: 'N.V. Gogol', bookTitle: \"Dikan'ka's nights\", bookPages: 180});\n\n});\n\nit('authorBook should return object with bookPages', () => {\n  expect(authorBook(\n    {name: 'Y.M. Golpin', bookTitle: 'The Zoo', bookPages: 0},\n    {chapter1: 29, chapter2: 45, chapter3: 16}\n  )).to.eql({name: 'Y.M. Golpin', bookTitle: 'The Zoo', bookPages: 90});\n});\n\nit('authorBook should return object with bookPages', () => {\n  expect(authorBook(\n    {name: 'J.R. Willing', bookTitle: 'Pepa the Pig', bookPages: 0},\n    {chapter1: 51, chapter2: 29, chapter3: 38}\n  )).to.eql({name: 'J.R. Willing', bookTitle: 'Pepa the Pig', bookPages: 118});\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit"
}