{
  "_id": "635f2a362c8a9b00b7a9d8f4",
  "name": {
    "ru": "Исправьте ошибки в функции. Конкатенация адреса с форматированием",
    "en": "Correct the errors in the function. Address concatenation with formatting",
    "es": ""
  },
  "instruction": {
    "ru": "В функции есть опечатки, исправьте их.\n\n\nПример вызова функции:\n```javascript\naddressFormat('NY', '10001', '1', '40.7128', '74.0060');\n```\nДолжна вернуться строка: `NY 10001 // 1 (40.7128 - 74.0060)`",
    "en": "There are typos in the function, correct them.\n\n\nAn example of a function call:\n```javascript\naddressFormat('NY', '10001', '1', '40.7128', '74.0060');\n```\nShould return the line: ``NY 10001 // 1 (40.7128 - 74.0060)`",
    "es": ""
  },
  "initialSolution": "function addressFormat(cityCode, zipCode, homeNumber, lat, lng)\n  return cityCode + ' ' + zipCode  //  homeNumber + ' (' + lat + ' - ' + lng + ')';\n}",
  "completedSolution": "function addressFormat(cityCode, zipCode, homeNumber, lat, lng) {\n  return cityCode + ' ' + zipCode + ' // ' + homeNumber + ' (' + lat + ' - ' + lng + ')';\n}",
  "openTest": "it('Created function addressFormat', () => {\n  expect(addressFormat).to.be.a('function');\n});\n\nit('Function addressFormat returns correct string', () => {\n  expect(addressFormat('NY', '10001', '1', '40.7128', '74.0060')).to.equal('NY 10001 // 1 (40.7128 - 74.0060)');\n});\n\nit('Function addressFormat returns correct string', () => {\n  expect(addressFormat('SF', '50456', '756', '5.7128', '4.0060')).to.equal('SF 50456 // 756 (5.7128 - 4.0060)');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit"
}