{
  "_id": "63c09a67c7887ca79e289f7e",
  "name": {
    "ru": "Общая площадь дома по комнатам",
    "en": "",
    "es": ""
  },
  "instruction": {
    "ru": "Напишите функцию `totalArea`, которая принимает параметры:\n* `room1` - объект с шириной и длиной первой комнаты\n* `room2` - объект с шириной и длиной второй комнаты\n* `room3` - объект с шириной и длиной третьей комнаты\n\nКаждый объект комнаты имеет следующую структуру:\n```js\n{\n  width: 5,\n  length: 10\n}\n```\n\nФункция должна найти общую площадь всех комнат и вернуть её.\n\nОтвет должен быть строкой в формате:\n```js\n'Room 1: 50, Room 2: 100, Room 3: 150, Total: 300'\n```\n\nПример вызова функции:\n```javascript\ntotalArea(\n  { width: 5, length: 10 },\n  { width: 10, length: 10 },\n  { width: 15, length: 10 }\n); // 'Room 1: 50, Room 2: 100, Room 3: 150, Total: 300'\n```\n\nЕсли хотя бы в одной из комнат ширина или длина не является числом или меньше `1`, то функция должна вернуть строку: 'Invalid input'\n\nПример вызова функции с невалидными данными:\n```javascript\ntotalArea(\n  { width: 5, length: 10 },\n  { width: 10, length: '10' },\n  { width: 15, length: 10 }\n); // 'Invalid input'\n\ntotalArea(\n  { width: 5, length: -10 },\n  { width: 10, length: 10 },\n  { width: 0.5, length: 10 }\n); // 'Invalid input'\n```",
    "en": "",
    "es": ""
  },
  "initialSolution": "fun",
  "completedSolution": "function totalArea(room1, room2, room3) {\n  if (\n    typeof room1.width !== 'number' ||\n    typeof room1.length !== 'number' ||\n    room1.width < 1 ||\n    room1.length < 1 ||\n    typeof room2.width !== 'number' ||\n    typeof room2.length !== 'number' ||\n    room2.width < 1 ||\n    room2.length < 1 ||\n    typeof room3.width !== 'number' ||\n    typeof room3.length !== 'number' ||\n    room3.width < 1 ||\n    room3.length < 1\n  ) {\n    return 'Invalid input';\n  }\n\n  const area =\n    room1.width * room1.length + room2.width * room2.length + room3.width * room3.length;\n  return (\n    'Room 1: ' +\n    room1.width * room1.length +\n    ', Room 2: ' +\n    room2.width * room2.length +\n    ', Room 3: ' +\n    room3.width * room3.length +\n    ', Total: ' +\n    area\n  );\n}",
  "openTest": "it('Created function totalArea', () => {\n  expect(totalArea).to.be.a('function');\n});\n\nit('totalArea({ width: 5, length: 10 }, { width: 10, length: 10 }, { width: 15, length: 10 }) should return \"Room 1: 50, Room 2: 100, Room 3: 150, Total: 300\"', () => {\n  expect(\n    totalArea(\n      { width: 5, length: 10 },\n      { width: 10, length: 10 },\n      { width: 15, length: 10 },\n    ),\n  ).to.equal('Room 1: 50, Room 2: 100, Room 3: 150, Total: 300');\n});\n\nit('totalArea({ width: 2, length: 2 }, { width: 3, length: 3 }, { width: 4, length: 4 }) should return \"Room 1: 4, Room 2: 9, Room 3: 16, Total: 29\"', () => {\n  expect(\n    totalArea({ width: 2, length: 2 }, { width: 3, length: 3 }, { width: 4, length: 4 }),\n  ).to.equal('Room 1: 4, Room 2: 9, Room 3: 16, Total: 29');\n});\n\n// invalid input\nit('totalArea({ width: \"5\", length: \"10\" }, { width: \"10\", length: \"10\" }, { width: \"15\", length: \"10\" }) should return \"Invalid input\"', () => {\n  expect(\n    totalArea(\n      { width: '5', length: '10' },\n      { width: '10', length: '10' },\n      { width: '15', length: '10' },\n    ),\n  ).to.equal('Invalid input');\n});\n\nit('totalArea({ width: \"five\", length: 10 }, { width: 10, length: \"a\" }, { width: 15, length: 10 }) should return \"Invalid input\"', () => {\n  expect(\n    totalArea(\n      { width: 'five', length: 10 },\n      { width: 10, length: 'a' },\n      { width: 15, length: 10 },\n    ),\n  ).to.equal('Invalid input');\n});\n\n// invalid input, negative numbers\nit('totalArea({ width: -5, length: 10 }, { width: 10, length: 10 }, { width: 15, length: 10 }) should return \"Invalid input\"', () => {\n  expect(\n    totalArea(\n      { width: -5, length: 10 },\n      { width: 10, length: 10 },\n      { width: 15, length: 10 },\n    ),\n  ).to.equal('Invalid input');\n});\n\nit('totalArea({ width: 5, length: -10 }, { width: 10, length: 10 }, { width: 15, length: 10 }) should return \"Invalid input\"', () => {\n  expect(\n    totalArea(\n      { width: 5, length: -10 },\n      { width: 10, length: 10 },\n      { width: 15, length: 10 },\n    ),\n  ).to.equal('Invalid input');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit"
}