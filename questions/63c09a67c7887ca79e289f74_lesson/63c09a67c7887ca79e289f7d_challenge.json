{
  "_id": "63c09a67c7887ca79e289f7d",
  "name": {
    "ru": "Посчитать итоговую сумму покупок",
    "en": "",
    "es": ""
  },
  "instruction": {
    "ru": "Напишите функцию `calculateTotal`, которая принимает параметры:\n* `product1` - объект с информацией о первом товаре\n* `product2` - объект с информацией о втором товаре\n* `product3` - объект с информацией о третьем товаре\n* `discount` - скидка на все покупки в процентах\n\nКаждый объект продукта имеет свойства:\n* `name` – название товара, строка\n* `price` – цена товара, число\n* `quantity` – количество товара, число\n* `discount` – скидка на товар в процентах, число\n\nФункция должна посчитать сумму каждой покупки, сложить их и вычесть общую скидку.\n\nФункция должна вернуть строку вида: `Total price is $123`, где 123 – это итоговая сумма покупок.\n\nПример запуска функции:\n```javascript\ncalculateTotal(\n  { name: 'product1', price: 100, quantity: 2, discount: 10 }, // Subtotal $180\n  { name: 'product2', price: 200, quantity: 1, discount: 0 }, // Subtotal $200\n  { name: 'product3', price: 300, quantity: 4, discount: 20 }, // Subtotal $960\n  10 // Discount 10%\n);\n// 180 + 200 + 960 = 1340\n// 1340 - 10% (134) = 1206\n// Total price is: $1206\n```\n\nЕсли какой-то из дисконтов меньше 0, то он должен быть равен 0.\n\nЕсли какой-то из дисконтов больше 100, то он должен быть равен 90.\n\n```javascript\ncalculateTotal(\n  { name: 'product1', price: 100, quantity: 2, discount: 110 }, // Subtotal $20\n  { name: 'product2', price: 200, quantity: 1, discount: -10 }, // Subtotal $200\n  { name: 'product3', price: 300, quantity: 4, discount: 10 }, // Subtotal $1080\n  150 // Discount 90%\n);\n// 20 + 200 + 1080 = 1300\n// 1300 - 90% = 130\n// Total price is: $130\n\nВ зависимости от последовательности операций результат может отличаться.\n\nДля расчета скидки не используйте формулу : `price * quantity * (1 - discount / 100)` так как при некоторых расчетах вы будете получать значение, с периодическими десятичными дробями.\n\nНапример, `price * quantity * (1 - discount / 100)` для `price = 100`, `quantity = 2`, `discount = 10` вернет `180.00000000000003`, а не `180`.\n\nИспользуйте формулу: `price * quantity - price * quantity * discount / 100`\n\nДля итоговой суммы покупок используйте формулу:\n\n`subtotal1 + subtotal2 + subtotal3 - (subtotal1 + subtotal2 + subtotal3) * discountTotal / 100`",
    "en": "",
    "es": ""
  },
  "initialSolution": "fun",
  "completedSolution": "function calculateTotal(product1, product2, product3, discount) {\n  let discount1 = product1.discount;\n  let discount2 = product2.discount;\n  let discount3 = product3.discount;\n  let discountTotal = discount;\n\n  if (product1.discount < 0) discount1 = 0;\n  else if (product1.discount >= 100) discount1 = 90;\n\n  if (product2.discount < 0) discount2 = 0;\n  else if (product2.discount >= 100) discount2 = 90;\n\n  if (product3.discount < 0) discount3 = 0;\n  else if (product3.discount >= 100) discount3 = 90;\n\n  if (discount < 0) discountTotal = 0;\n  else if (discount >= 100) discountTotal = 90;\n\n  // product { name: 'name', price: 100, quantity: 2, discount: 12 }\n  const subtotal1 = product1.price * product1.quantity - product1.price * product1.quantity * discount1 / 100;\n  const subtotal2 = product2.price * product2.quantity - product2.price * product2.quantity * discount2 / 100;\n  const subtotal3 = product3.price * product3.quantity - product3.price * product3.quantity * discount3 / 100;\n\n  const total = subtotal1 + subtotal2 + subtotal3 - (subtotal1 + subtotal2 + subtotal3) * discountTotal / 100;\n\n  return (\n    'Total price is $' + total\n  );\n}",
  "openTest": "it('Created function calculateTotal', () => {\n  expect(calculateTotal).to.be.a('function');\n});\n\nit('calculateTotal({ name: \"product1\", price: 100, quantity: 2, discount: 10 }, { name: \"product2\", price: 200, quantity: 1, discount: 0 }, { name: \"product3\", price: 300, quantity: 4, discount: 20 }, 10) should return \"Total price is $1206\"', () => {\n  expect(\n    calculateTotal(\n      { name: 'product1', price: 100, quantity: 2, discount: 110 }, // Subtotal $20\n      { name: 'product2', price: 200, quantity: 1, discount: -10 }, // Subtotal $200\n      { name: 'product3', price: 300, quantity: 4, discount: 10 }, // Subtotal $1080\n      150, // Discount 90%\n    ),\n  ).to.be.equal('Total price is $130');\n});\n\nit('calculateTotal({ name: \"product1\", price: 100, quantity: 2, discount: 110 }, { name: \"product2\", price: 200, quantity: 1, discount: -10 }, { name: \"product3\", price: 300, quantity: 4, discount: 10 }, 150) should return \"Total price is $130\"', () => {\n  expect(\n    calculateTotal(\n      { name: 'product1', price: 100, quantity: 2, discount: 110 },\n      { name: 'product2', price: 200, quantity: 1, discount: -10 },\n      { name: 'product3', price: 300, quantity: 4, discount: 10 },\n      150,\n    ),\n  ).to.be.equal('Total price is $130');\n});\n\nit('calculateTotal({ name: \"product1\", price: 150, quantity: 2, discount: 110 }, { name: \"product2\", price: 200, quantity: 1, discount: 5 }, { name: \"product3\", price: 300, quantity: 4, discount: -1 }, 150) should return \"Total price is $130\"', () => {\n  expect(\n    calculateTotal(\n      { name: 'product1', price: 150, quantity: 2, discount: 110 },\n      { name: 'product2', price: 200, quantity: 1, discount: 5 },\n      { name: 'product3', price: 300, quantity: 4, discount: -1 },\n      150,\n    ),\n  ).to.be.equal('Total price is $142');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit"
}