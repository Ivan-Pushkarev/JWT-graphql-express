{
  "_id": "63c094c582c84077cf804e62",
  "name": {
    "ru": "Определите тренд роста или падения",
    "en": "",
    "es": ""
  },
  "instruction": {
    "ru": "Напишите функцию `trend`, которая принимает три строки и возвращает строку `Up`, если длина второй строки больше первой, а длина третьей строки больше второй.\n\nЕсли длина второй строки меньше первой, а длина третьей строки меньше второй, возвращается строка `Down`.\n\nЕсли ни одно из условий не выполняется, возвращается строка `Not sure`.\n\nПримеры запуска функции:\n```javascript\ntrend('aaa', 'aa', 'a'); // 'Down'\ntrend('aaa', 'bbbb', 'bbbbb'); // 'Up'\ntrend('aaa', 'qqq', 'qqqqq'); // 'Not sure'\n```",
    "en": "",
    "es": ""
  },
  "initialSolution": "fun",
  "completedSolution": "function trend(str1, str2, str3) {\n  if (str1.length < str2.length && str2.length < str3.length) {\n    return 'Up';\n  } else if (str1.length > str2.length && str2.length > str3.length) {\n    return 'Down';\n  }\n  return 'Not sure';\n}",
  "openTest": "it('Created function trend', () => {\n  expect(trend).to.be.a('function');\n});\n\nit('trend(\"aaa\", \"aa\", \"a\") should return \"Down\"', () => {\n  expect(trend('aaa', 'aa', 'a')).to.equal('Down');\n});\n\nit('trend(\"aaa\", \"bbbb\", \"bbbbb\") should return \"Up\"', () => {\n  expect(trend('aaa', 'bbbb', 'bbbbb')).to.equal('Up');\n});\n\nit('trend(\"aaa\", \"qqq\", \"qqqqq\") should return \"Not sure\"', () => {\n  expect(trend('aaa', 'qqq', 'qqqqq')).to.equal('Not sure');\n});\n\nit('trend(\"a\", \"b\", \"c\") should return \"Not sure\"', () => {\n  expect(trend('a', 'b', 'c')).to.equal('Not sure');\n});\n\nit('trend(\"a\", \"aaaaaaa\", \"aaaaaaaaaaaaaa\") should return \"Up\"', () => {\n  expect(trend('a', 'aaaaaaa', 'aaaaaaaaaaaaaa')).to.equal('Up');\n});\n\nit('trend(\"aaaaaaaaaa\", \"aa\", \"a\") should return \"Down\"', () => {\n  expect(trend('aaaaaaaaaa', 'aa', 'a')).to.equal('Down');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit"
}