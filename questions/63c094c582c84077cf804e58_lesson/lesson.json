{
  "_id": "63c094c582c84077cf804e58",
  "content": {
    "ru": "Свойство `length` возвращает целочисленное значение, представляющее количество символов в строке, то есть длину стоки. \n\nНапример, длина строки `\"Hello\"` равна 5.\n\nСинтаксис свойства `length` следующий: `str.length`, где `str` — строка.\n\nНайдем количество символов в строке `'Hello'`:\n\n```javascript\nconst str = 'Hello';\nconsole.log(str.length); // 5\n```\n\nЭтот же пример можно записать и так:\n\n```javascript\nconsole.log('Hello'.length); // 5\n```\n\nДля пустых строк свойство `length` возвращает `0`.\n\n```javascript\nconst str = '';\nconsole.log(str.length); // выведет 0, строка пустая\n```\n\nРассмотрим пример использования свойства `length` с переменной:\n\n```javascript\nconst greeting = 'Hello'\nconst strLength = greeting.length;\nconsole.log(strLength - 1); // 4\n```\n\nТеперь объявим переменную с именем `length` и присвоим ей `greeting.length`:\n\n```javascript\nconst greeting = 'Hello'\nconst length = greeting.length\n\nconsole.log(length);  // в консоль выведет 5, вывели переменную в которую записали длину строки \n```\n\nПеременная может быть названа `length`, так как она не перекрывает свойство `length` строки. Мы рекомендуем не называть переменные именами свойств, чтобы избежать путаницы. \n\n\nТакже попробуем вызвать свойство `length` для переменной `greeting` в которой была выполнена конкатенация:\n\n```javascript\nconst greeting = 'Hello ' + 'world'\nconst greetingLength = greeting.length\n\nconsole.log(greetingLength); // в консоль выведет 11. В переменной greeting хранится строка 'Hello world' \n```\n\nВ этом примере мы объявили переменную `greetingLength` и присвоили ей значение свойства `length` строки `greeting`. В консоль выведется `11`, так как в переменной `greeting` хранится строка `'Hello world'`, которая состоит из 11 символов.\n\nНазвание переменной `greetingLength` явно сообщает, что в ней хранится. Это хорошо.\n",
    "en": "# Длина строки language: en",
    "es": "# Длина строки language: es"
  },
  "video": {
    "ru": "https://youtu.be/ebCvKZGkPw4",
    "en": "",
    "es": ""
  }
}