{
  "_id": "63689267157a0ef5c22aa34f",
  "content": {
    "ru": "Вспомним операторы сравнения чисел:\n\n`>`  — больше\n\n`<`  — меньше\n\n`>=` — больше или равно\n\n`<=` — меньше или равно\n\n```javascript\nconsole.log(3 > 2);  // true\nconsole.log(3 >= 3);  // true\nconsole.log(2 < 3);  // true\nconsole.log(2 <= 2);  // true\n```\n\nА теперь рассмотрим операторы для сравнения на равенство и неравенство:\n\n### Оператор строгого равенства `===` тройное равно\n\nПишется, как тройной символ знака равенства `===`, и сравнивает два значения на равенство.\n\nОператор строгого равенства `===` проверяет равенство **без** приведения типов.\n\nЭтот оператор работает следующим образом:\n\n* `true` — если операнды имеют **одинаковые значения и одинаковый тип**.\n* `false` — если операнды имеют **одинаковые значения и разные типы**.\n* `false` — если операнды имеют **разные значения**.\n\n```javascript\nconst n1 = 2;\nconst n2 = 3;\nconst n3 = 2;\n\nconsole.log(n1 === n2); // false, 2 не равно 3\nconsole.log(n1 === n3); // true, 2 равно 2\n```\n\nТеперь зададим переменной `n2` значение другого типа:\n\n```javascript\nconst n1 = 2;\nconst n2 = '2';\n\nconsole.log(n1 === n2); // false, хоть значения и одинаковые, но типы разные\n```\n\nРассмотрим еще пару примеров:\n\n```javascript\nconsole.log(1 === true); // false\nconsole.log(0 === false); // false\nconsole.log('' === false); // false\n```\n\nЧтобы сравнить значения разных типов с помощью оператора строгого равенства, приведите значения к одному типу:\n\n```javascript\nconst n1 = false;\nconst n2 = !!'';\n\nconsole.log(n1 === n2); // true, строка '' приводиться к false\n```\n\n### Оператор нестрогого равенства `==`\n\nПишется, как двойной символ знака равенства `==`, и также сравнивает два значения на равенство.\n\nПри сравнении значений разных типов **приводит** каждое из них к числу.\n\nЭтот оператор работает следующим образом:\n\n* `true` — если операнды имеют **одинаковые значения и одинаковый тип**.\n* `true` — если операнды имеют **одинаковые значения и разные типы**.\n* `false` — если операнды имеют **разные значения**.\n\n```javascript\nconst n1 = 2;\nconst n2 = '2';\n\nconsole.log(n1 == n2); // true, строка '2' становится числом 2\n```\n\nРассмотрим еще пару примеров:\n\n```javascript\nconsole.log(1 == true); // true\nconsole.log(0 == false); // true\nconsole.log('' == false); // true\n```\n\nПримечание. В JavaScript `===` и `==` — это операторы сравнения, тогда как `=` — это оператор присваивания.\n\nЕсли вы по ошибке используете `=` вместо `===` или `==`, вы можете получить нежелательный результат.\n\n### Оператор строгого неравенства `!==`\n\nПишется, как одинарный символ знака восклицания и двойной символ знака равенства `!==`, сравнивает два значения на неравенство.\n\nОператор строгого неравенства `!==` проверяет неравенство **без** приведения типов.\n\nЭтот оператор работает следующим образом:\n\n* `false` — если операнды имеют **одинаковые значения и одинаковый тип**.\n* `true` — если операнды имеют **одинаковые значения и разные типы**.\n* `true` — если операнды имеют **разные значения**.\n\n```javascript\nconst n1 = 2;\nconst n2 = 1;\n\nconsole.log(n1 !== n2); // true, 2 не равно 1\n```\n\nРассмотрим еще пару примеров:\n\n```javascript\nconsole.log(1 !== 1); // false\nconsole.log(1 !== 2); // true\nconsole.log(1 !== '1'); // true\nconsole.log(1 !== '2'); // true\n```\n\n### Оператор нестрогого неравенства `!=`\n\nПишется, как одинарный символ знака восклицания и одинарный символ знака равенства `!=`, сравнивает два значения на неравенство.\n\nПри сравнении значений разных типов **приводит** каждое из них к числу.\n\nЭтот оператор работает следующим образом:\n\n* `false` — если операнды имеют **одинаковые значения и одинаковый тип**.\n* `false` — если операнды имеют **одинаковые значения и разные типы**.\n* `true` — если операнды имеют **разные значения**.\n\n```javascript\nconst n1 = 2;\nconst n2 = 1;\n\nconsole.log(n1 != n2); // true, 2 не равно 1\n```\n\nРассмотрим еще пару примеров:\n\n```javascript\nconsole.log(1 != 1); // false\nconsole.log(1 != 2); // true\nconsole.log(1 != '1'); // false, '1' приводиться к числу 1\nconsole.log(1 != '2'); // true\n```\n\nПопробуем использовать операторы сравнения в сочетании с `if`:\n\nДопустим, мы на остановке ждем автобус №1 или №10, а приезжает автобус №2\n\n```javascript\nconst bus = 2;\n\nif (bus === 1) {\n    console.log('Go!')\n} else if (bus === 10) {\n    console.log('Go!')\n} else {\n    console.log('Bus number is not 1 or 10') // в консоль выведет 'Bus number is not 1 or 10'\n}\n\nif (bus !== 1) {\n    console.log('Wait!') // в консоль выведет 'Wait!'\n}\n```\n\nПодведем итог:\n\n`===` — возвращает `true`, если операнды **равны и одного типа**.\n\n`==` — возвращает `true`, если операнды **равны**.\n\n`!=` — возвращает `true`, если операнды **не равны**.\n\n`!==` — возвращает `true`, если операнды равны, но **разного типа или вообще не равны**.\n\nДля сравнения значений на равенство/неравенство используйте `===`/`!==`, использовать `==`/`!=` **не рекомендуется** !\n",
    "en": "# Сравнение на равенство и неравенство. Операторы ==, ===, !=, !== language: en",
    "es": "# Сравнение на равенство и неравенство. Операторы ==, ===, !=, !== language: es"
  },
  "video": {
    "ru": "https://youtu.be/GF3gAOqtSlE",
    "en": "",
    "es": ""
  }
}