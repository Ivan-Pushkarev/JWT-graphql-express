{
  "_id": "63683072577d41fa4da0e9f9",
  "name": {
    "ru": "Пункт обмена валюты. Маржинальность обмена",
    "en": "Currency exchange office. Exchange margin",
    "es": ""
  },
  "instruction": {
    "ru": "Пункт обмена валюты принимает два параметра:\n* `buyRate` – курс покупки\n* `sellRate` – курс продажи\n\nНазвание функции: `exchangeRateMargin`\n\nПри обмене валюты, пункт обмена должен платить налог 2% с каждой сделки.\n\nТо есть итоговая маржинальность обмена на 2% меньше.\n\nФункция должна возвращать итоговую маржинальность обмена валюты в процентах с вычетом налога.\n\nПримеры:\n```javascript\nexchangeRateMargin(100, 110); // 8\nexchangeRateMargin(100, 120); // 18\nexchangeRateMargin(100, 130); // 28\nexchangeRateMargin(50, 70); // 38\n```\n\nДля расчета используйте формулу:\n`(sellRate - buyRate) / buyRate * 100 - 2`",
    "en": "The exchange point accepts two parameters:\n* `buyRate` - bid rate\n* `sellRate` - sale rate\n\nName of the function: `exchangeRateMargin`.\n\nWhen exchanging currency, the exchanger must pay a tax of 2% from each transaction.\n\nThat is, the final exchange margin is 2% less.\n\nThe function should return the final margin of the currency exchange in percent minus the tax.\n\nExamples:\n```javascript\nexchangeRateMargin(100, 110); // 8\nexchangeRateMargin(100, 120); // 18\nexchangeRateMargin(100, 130); // 28\nexchangeRateMargin(50, 70); // 38\n```\n\nUse the formula for the calculation:\n`(sellRate - buyRate) / buyRate * 100 - 2`",
    "es": ""
  },
  "initialSolution": "fun",
  "completedSolution": "function exchangeRateMargin(buyRate, sellRate) {\n  return (sellRate - buyRate) / buyRate * 100 - 2;\n}",
  "openTest": "it('Created function exchangeRateMargin', () => {\n  expect(exchangeRateMargin).to.be.a('function');\n});\n\nit('exchangeRateMargin(100, 110) should return 8', () => {\n  expect(exchangeRateMargin(100, 110)).to.be.equal(8);\n});\n\nit('exchangeRateMargin(100, 120) should return 18', () => {\n  expect(exchangeRateMargin(100, 120)).to.be.equal(18);\n});\n\nit('exchangeRateMargin(100, 130) should return 28', () => {\n  expect(exchangeRateMargin(100, 130)).to.be.equal(28);\n});\n\nit('exchangeRateMargin(50, 70) should return 40', () => {\n  expect(exchangeRateMargin(50, 70)).to.be.equal(38);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit"
}